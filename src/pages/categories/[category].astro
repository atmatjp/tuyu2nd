---
import Layout from "../../layouts/Layout.astro";
import { getBlogs } from "../../libs/microcms";
import "../../styles/blog.css";

const category = String(Astro.params.category);

type Blog = {
  id: string;
  title: string;
  tag: string[];
  category: string[];
  createdAt: string;
  content: string;
};

const response = await getBlogs({
  filters: `category[contains]${category}`,
  fields: ["id", "title", "tag", "category", "createdAt", "content"],
});
const blogs: Blog[] = response.contents || [];

export async function getStaticPaths() {
  const response = await getBlogs({ fields: ["category"] });
  const blogs: { category: string[] }[] = response.contents || [];

  const uniqueCategories = [
    ...new Set(blogs.flatMap((blog) => blog.category || [])),
  ];

  return uniqueCategories.map((cat) => ({
    params: { category: cat },
    props: {},
  }));
}
---

<Layout title={`${category}`}>
  <div class="all" data-pagefind-ignore="all">
    <div class="content">
      <h1>{category}</h1>
      <ul>
        {
          blogs.map((blog) => (
            <li class="blog-item">
              <a href={`/blogs/${blog.id}`} class="blog-title">
                {blog.title}
              </a>{" "}
              <div class="blog-tags">
                {blog.tag &&
                  blog.tag.map((t) => (
                    <a href={`/tags/${encodeURIComponent(t)}`} class="blog-tag">
                      #{t}
                    </a>
                  ))}
              </div>
              <div class="blog-date">
                <p>
                  <svg
                    viewBox="0 0 24 24"
                    width="18"
                    height="18"
                    style="position: relative; top: 2px;"
                  >
                    <path fill="currentColor" d="M5 6h14v2H5z" opacity="0.3" />
                    <path
                      fill="currentColor"
                      d="M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V10h14zm0-12H5V6h14zM9 14H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2zm-8 4H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2z"
                    />
                  </svg>
                  {new Date(blog.createdAt).toLocaleDateString("ja-JP")}
                </p>
              </div>
              <div class="blog-preview">
                <p>
                  {blog.content
                    ? blog.content.replace(/<[^>]+>/g, "").slice(0, 80) + "â€¦"
                    : ""}
                </p>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</Layout>
